// Code generated by capnpc-go. DO NOT EDIT.

package protocols

import (
	context "golang.org/x/net/context"
	math "math"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

type Metrics struct{ Client capnp.Client }

// Metrics_TypeID is the unique identifier for the type Metrics.
const Metrics_TypeID = 0xb8c43d882114c266

func (c Metrics) Submit(ctx context.Context, params func(Metrics_submit_Params) error, opts ...capnp.CallOption) Metrics_submit_Results_Promise {
	if c.Client == nil {
		return Metrics_submit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb8c43d882114c266,
			MethodID:      0,
			InterfaceName: "protocols/metrics.capnp:Metrics",
			MethodName:    "submit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Metrics_submit_Params{Struct: s}) }
	}
	return Metrics_submit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Metrics_Server interface {
	Submit(Metrics_submit) error
}

func Metrics_ServerToClient(s Metrics_Server) Metrics {
	c, _ := s.(server.Closer)
	return Metrics{Client: server.New(Metrics_Methods(nil, s), c)}
}

func Metrics_Methods(methods []server.Method, s Metrics_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb8c43d882114c266,
			MethodID:      0,
			InterfaceName: "protocols/metrics.capnp:Metrics",
			MethodName:    "submit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Metrics_submit{c, opts, Metrics_submit_Params{Struct: p}, Metrics_submit_Results{Struct: r}}
			return s.Submit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// Metrics_submit holds the arguments for a server call to Metrics.submit.
type Metrics_submit struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Metrics_submit_Params
	Results Metrics_submit_Results
}

type Metrics_submit_Params struct{ capnp.Struct }

// Metrics_submit_Params_TypeID is the unique identifier for the type Metrics_submit_Params.
const Metrics_submit_Params_TypeID = 0xd3e245b385ea1813

func NewMetrics_submit_Params(s *capnp.Segment) (Metrics_submit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Metrics_submit_Params{st}, err
}

func NewRootMetrics_submit_Params(s *capnp.Segment) (Metrics_submit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Metrics_submit_Params{st}, err
}

func ReadRootMetrics_submit_Params(msg *capnp.Message) (Metrics_submit_Params, error) {
	root, err := msg.RootPtr()
	return Metrics_submit_Params{root.Struct()}, err
}

func (s Metrics_submit_Params) String() string {
	str, _ := text.Marshal(0xd3e245b385ea1813, s.Struct)
	return str
}

func (s Metrics_submit_Params) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Metrics_submit_Params) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Metrics_submit_Params) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Metrics_submit_Params) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Metrics_submit_Params) Value() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Metrics_submit_Params) SetValue(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

// Metrics_submit_Params_List is a list of Metrics_submit_Params.
type Metrics_submit_Params_List struct{ capnp.List }

// NewMetrics_submit_Params creates a new list of Metrics_submit_Params.
func NewMetrics_submit_Params_List(s *capnp.Segment, sz int32) (Metrics_submit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Metrics_submit_Params_List{l}, err
}

func (s Metrics_submit_Params_List) At(i int) Metrics_submit_Params {
	return Metrics_submit_Params{s.List.Struct(i)}
}

func (s Metrics_submit_Params_List) Set(i int, v Metrics_submit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Metrics_submit_Params_List) String() string {
	str, _ := text.MarshalList(0xd3e245b385ea1813, s.List)
	return str
}

// Metrics_submit_Params_Promise is a wrapper for a Metrics_submit_Params promised by a client call.
type Metrics_submit_Params_Promise struct{ *capnp.Pipeline }

func (p Metrics_submit_Params_Promise) Struct() (Metrics_submit_Params, error) {
	s, err := p.Pipeline.Struct()
	return Metrics_submit_Params{s}, err
}

type Metrics_submit_Results struct{ capnp.Struct }

// Metrics_submit_Results_TypeID is the unique identifier for the type Metrics_submit_Results.
const Metrics_submit_Results_TypeID = 0xfe8bed84b5c95623

func NewMetrics_submit_Results(s *capnp.Segment) (Metrics_submit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Metrics_submit_Results{st}, err
}

func NewRootMetrics_submit_Results(s *capnp.Segment) (Metrics_submit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Metrics_submit_Results{st}, err
}

func ReadRootMetrics_submit_Results(msg *capnp.Message) (Metrics_submit_Results, error) {
	root, err := msg.RootPtr()
	return Metrics_submit_Results{root.Struct()}, err
}

func (s Metrics_submit_Results) String() string {
	str, _ := text.Marshal(0xfe8bed84b5c95623, s.Struct)
	return str
}

// Metrics_submit_Results_List is a list of Metrics_submit_Results.
type Metrics_submit_Results_List struct{ capnp.List }

// NewMetrics_submit_Results creates a new list of Metrics_submit_Results.
func NewMetrics_submit_Results_List(s *capnp.Segment, sz int32) (Metrics_submit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Metrics_submit_Results_List{l}, err
}

func (s Metrics_submit_Results_List) At(i int) Metrics_submit_Results {
	return Metrics_submit_Results{s.List.Struct(i)}
}

func (s Metrics_submit_Results_List) Set(i int, v Metrics_submit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Metrics_submit_Results_List) String() string {
	str, _ := text.MarshalList(0xfe8bed84b5c95623, s.List)
	return str
}

// Metrics_submit_Results_Promise is a wrapper for a Metrics_submit_Results promised by a client call.
type Metrics_submit_Results_Promise struct{ *capnp.Pipeline }

func (p Metrics_submit_Results_Promise) Struct() (Metrics_submit_Results, error) {
	s, err := p.Pipeline.Struct()
	return Metrics_submit_Results{s}, err
}

const schema_b1de3984a98f80b1 = "x\xda\x8c\x8f\xb1J3A\x00\x84gv\xf7\xfe\xfb!" +
	"\x81\xb8\x98\"]\"\xa6P\xc1h\xc4\xc6\x80$\x8dX" +
	"\x09Y\x0b\xfb5\x9c\x10\xc8%\xc7\xed\x9d\xa2\x95E\x02" +
	"\x82\x85\xf8\x00>\x80e\x10\xc1Zl\xac\xed-,\x85" +
	"\xbc\x82'!(6\x82\xe50\xc3\xf71s\xb6%\xea" +
	"^\x81\x80\xc9{\xff\xb2\xa3\xc7\xe2\xc2\xc5\xf6\xd3\x03t" +
	"If\xe3\xf3\xab\xdb\xe1\xd6\xeb\x18`=\x14\xd4\xa7>" +
	"\xa0\xd3]}\xe3\x03\xd9|\xe9}t\xb7\xf3\xf6\x02S" +
	"!\x01\x8f>P\x1f\xc5\x04\xf5\xf5\x09\x98-\x1e<\xdf" +
	"\x0f'\x97\x1f\xd0\x15\x02j\xdaN\xce\x08\x95E\xf1 " +
	"\x19t\x06=\xe9\xd6\xc2 \x89\xbb\x1dW\xeb\xd8\xa8\x1f" +
	"5\xf6f\x09m\xd2(\xe9\xfdp\xf0\x0b\xa6u\x03B" +
	"{~\xd3\xa5\x87a7i\xb1M~\x03\xd5/\xc0\xda" +
	"l\\m\x97mlCg\xfeK\x05(\x02zy\x05" +
	"0UI\xb3.H\x16\xa7?\xf4\xea\x06`\x96$\xcd" +
	"\xa6`\xa1o\xc3\x80y\x08\xe6\xc1\xf2\xb1\xed\xa5\x01s" +
	"\x10\xcc\xe1\xef\xd6\xfdf\xe0\xd2^\xe2>\x03\x00\x00\xff" +
	"\xffl\x87hC"

func init() {
	schemas.Register(schema_b1de3984a98f80b1,
		0xb8c43d882114c266,
		0xd3e245b385ea1813,
		0xfe8bed84b5c95623)
}
